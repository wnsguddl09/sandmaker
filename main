#define _CRT_SECURE_NO_WARNINGS //
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h>
#include <Windows.h>
#include <MMSystem.h>
#pragma comment(lib,"winmm")
#define MAP_ADJ_X 3
#define MAP_ADJ_Y 2
#define MAP_X 30
#define MAP_Y 20
void gotoxy(int x, int y) {  //함수를 이동시키는 것
   COORD Pos = { x,y };
   SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}

void Gotoxy(int x, int y, char* s) { //x값을 2x로 변경, 좌표값에 바로 문자열을 입력할 수 있도록 printf함수 삽입  
   COORD pos = { 2 * x,y };
   SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
   printf("%s", s);
}

int begin(void)
{
	char choice;
first:
	clear;
	gotoxy(35, 7);
	printf("샌_ 드_ 메_ 이_ 커_ \n\n\n\n\n"); Sleep(1500);
	printf("            1. 게임 시작 \n\n            2. 설명\n\n");
answer:
	gotoxy(32, 9); printf("선택 : "); scanf("%c", &choice);
	if (choice == '1') { clear; return 0; }//게임 시작
	else if (choice == '2')                                 //도움말
	{
		clear;
		printf("\n\n\n\n                  우리가 직접 샌드위치를 만들어서 팔아보자~~!!!\n");//게임 설명
		Sleep(1000);
		printf("\n                손님이 주문하는 다양한 토핑의 샌드위치를 쌓는다!!!!('q'~'y'입력)\n");
		Sleep(1000);
		printf("\n                    토핑을 다 쌓았으면 샌드위치를 전달하자~~!!!(enter 입력)\n");
		Sleep(1000);
		printf("\n               샌드위치를 만들었으면 음료수도 높이에 맞게 따라준다(space bar)~~~\n");
		Sleep(1000);
		printf("\n                     만약 샌드위치 모양이 틀렸다면 다시 주문~~\n");
		Sleep(1000);
		printf("\n                       다 이해했으면 Enter키를 입력해주세요~~\n");

		getchar(); getchar(); goto first;
	}
	else { goto answer; }
}

int main()
{
	begin();

	int randomsand, randomsand1;
	srand(time);
	int randomwo;
	int i = 0, a = 0, b = 0, c = 0;
	char arr[10];
	char arr1[10];
	int num = 0, score = 0;
	clock_t oldtime;
a:
	gotoxy(60, 8);
	printf("^^^^^^^^^^^^ : - a");
	gotoxy(60, 10);
	printf("ㅁㅁㅁㅁㅁㅁ : - b");
	gotoxy(60, 12);
	printf("wwwwwwwwwwww : - q");
	gotoxy(60, 14);
	printf(",,,,,,,,,,,, : - w");
	gotoxy(60, 16);
	printf("xxxxxxxxxxxx : - e");
	gotoxy(60, 18);
	printf("************ : - r");
	gotoxy(60, 20);
	printf("############ : - t");
	gotoxy(60, 22);
	printf("oooooooooooo : - y");
	gotoxy(30, 24);
	for (c = 5; c < 24; c++)
	{
		gotoxy(25, c);
		printf("■");
	}
	gotoxy(22, 26);
	printf("점수 : %d", score);

	randomsand = rand() % 7 + 1;
	randomsand1 = 1;
	gotoxy(7, 15);
	printf("ㅁㅁㅁㅁㅁㅁ\n");
	arr[0] = 'b';
	for (i = 0; i < randomsand; i++)
	{
		randomwo = rand() % 6;

		gotoxy(7, 15 - randomsand1);
		switch (randomwo)  //case로 사용자 입력 받아서 arr배열에 저장하기
		{
		case 1:
			printf("wwwwwwwwwww\n");
			arr[i + 1] = 'q';
			break;
		case 2:
			printf(",,,,,,,,,,,\n");
			arr[i + 1] = 'w';
			break;
		case 3:
			printf("xxxxxxxxxxx\n");
			arr[i + 1] = 'e';
			break;
		case 4:
			printf("***********\n");
			arr[i + 1] = 'r';
			break;
		case 5:
			printf("###########\n");
			arr[i + 1] = 't';
			break;
		default:
			printf("ooooooooooo\n");
			arr[i + 1] = 'y';
			break;

		}
		randomsand1++;
	}
	gotoxy(7, 15 - randomsand1);
	printf("^^^^^^^^^^^\n");
	arr[i + 1] = 'a';
	gotoxy(7, 23);
	printf("주문받은 버거");
	gotoxy(31, 23);
	printf("내가 만든 버거");
	a = 0;
	while (1) {
		
		gotoxy(35, 15 - b);
		scanf(" %c", &arr1[a]);


		if ((arr[a] == arr1[a]))//사용자의 입력을 arr1에 저장하여 arr과 비교해보기
		{
			gotoxy(35, 15 - b);
			b++;
			switch (arr[a])
			{
			case 'a':
				printf("^^^^^^^^^^^^\n");
				getchar(); break;
			case 'q':
				printf("wwwwwwwwwwww\n");
				getchar(); break;
			case 'w':
				printf(",,,,,,,,,,,,\n");
				getchar(); break;
			case 'e':
				printf("xxxxxxxxxxxxx\n");
				getchar(); break;
			case 'r':
				printf("*************\n");
				getchar(); break;
			case 't':
				printf("#############\n");
				getchar(); break;
			case 'y':
				printf("ooooooooooo\n");
				getchar(); break;
			default:
				printf("ㅁㅁㅁㅁㅁㅁ\n");
				getchar(); break;


			}


			if (arr[a] == 'a'&&arr1[a] == 'a') {//오답인 

				system("cls");
				b = 0;
				score++;
				goto a;

			}
			a++;
			num = num + 2;
		}
		else
		{
			system("cls");
			gotoxy(20, 10);
			printf("땡!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
			Sleep(500);
			system("cls");
			b = 0;

			goto a;
		}


	}

	system("pause");
	return 0;
}
